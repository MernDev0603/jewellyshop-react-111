{"version":3,"sources":["components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/_gate/general-addvisitor/AddVisitorForm.js","pages/gate/AddVisitor.js","utils/formatNumber.js","utils/fakeRequest.js"],"names":["styled","theme","outline","display","textAlign","alignItems","flexDirection","justifyContent","padding","spacing","borderRadius","shape","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","overflow","position","transition","transitions","create","RootStyle","width","height","margin","DropZoneStyle","zIndex","PlaceholderStyle","color","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","error","file","caption","sx","other","useDropzone","multiple","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","variant","py","px","my","borderColor","bgcolor","alpha","main","map","errors","path","size","Box","Typography","noWrap","fData","e","component","message","code","alt","src","isString","preview","objectFit","className","Icon","icon","roundAddAPhoto","mb","length","UserNewForm","isEdit","currentUser","navigate","useNavigate","NewUserSchema","Yup","firstname","required","lastname","phoneNumber","email","visitpurpose","meetingagent","avatarUrl","formik","useFormik","enableReinitialize","initialValues","name","validationSchema","onSubmit","values","a","setSubmitting","resetForm","setErrors","fakeRequest","enqueueSnackbar","PATH_DASHBOARD","user","list","console","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","useCallback","acceptedFiles","URL","createObjectURL","value","noValidate","autoComplete","Stack","mt","Label","status","textTransform","top","right","fontSize","fontWeight","accept","maxSize","onDrop","Boolean","Button","boxShadow","startIcon","FormControlLabel","labelPlacement","control","Switch","onChange","event","target","checked","label","mx","ml","direction","xs","sm","TextField","fullWidth","helperText","LoadingButton","type","loading","ContentStyle","maxWidth","minHeight","AddVisitor","useSettings","themeStretch","Page","title","Container","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","time","Promise","res","setTimeout"],"mappings":"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","file":"static/js/17.cf2a070a.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction\n} from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex'\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\n                        }\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper'\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Paper, Box, Typography } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer'\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          }),\n          ...(file && { padding: '12% 0' })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)'\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Typography, Paper } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9\n    }\n  }\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&:hover': { opacity: 0.72 }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter'\n            })\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 }\n              })\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Icon } from '@iconify/react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel,\r\n  Button\r\n} from '@mui/material';\r\n// utils\r\nimport { fData } from '../../../utils/formatNumber';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport Label from '../../Label';\r\nimport { UploadAvatar } from '../../upload';\r\nimport countries from './countries';\r\n// import Button from 'src/theme/overrides/Button';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentUser: PropTypes.object\r\n};\r\n\r\nexport default function UserNewForm({ isEdit, currentUser }) {\r\n  const navigate = useNavigate();\r\n  // const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewUserSchema = Yup.object().shape({\r\n    firstname: Yup.string().required('Name is required'),\r\n    lastname: Yup.string().required('Name is required'),\r\n    phoneNumber: Yup.string().required('Phone number is required'),\r\n    email: Yup.string().required('Email is required').email(),\r\n    visitpurpose: Yup.string().required('Visit purpose is required'),\r\n    meetingagent: Yup.string().required('Meeting agent is required'),\r\n    // country: Yup.string().required('country is required'),\r\n    // company: Yup.string().required('Company is required'),\r\n    // state: Yup.string().required('State is required'),\r\n    // city: Yup.string().required('City is required'),\r\n    // role: Yup.string().required('Role Number is required'),\r\n    avatarUrl: Yup.mixed().required('Avatar is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      firstname: currentUser?.name || '',\r\n      lastname: currentUser?.name || '',\r\n      phoneNumber: currentUser?.phoneNumber || '',\r\n      email: currentUser?.email || '',\r\n      visitpurpose: currentUser?.visitpurpose || '',\r\n      meetingagent: currentUser?.meetingagent || '',\r\n      // country: currentUser?.country || '',\r\n      // state: currentUser?.state || '',\r\n      // city: currentUser?.city || '',\r\n      // zipCode: currentUser?.zipCode || '',\r\n      avatarUrl: currentUser?.avatarUrl || null\r\n      // isVerified: currentUser?.isVerified || true,\r\n      // status: currentUser?.status,\r\n      // company: currentUser?.company || '',\r\n      // role: currentUser?.role || ''\r\n    },\r\n    validationSchema: NewUserSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n        resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\r\n        navigate(PATH_DASHBOARD.user.list);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n      if (file) {\r\n        setFieldValue('avatarUrl', {\r\n          ...file,\r\n          preview: URL.createObjectURL(file)\r\n        });\r\n      }\r\n    },\r\n    [setFieldValue]\r\n  );\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Stack spacing={3} sx={{ mt: -10 }}>\r\n          <Stack>\r\n            {isEdit && (\r\n              <Label\r\n                color={values.status !== 'active' ? 'error' : 'success'}\r\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\r\n              >\r\n                {values.status}\r\n              </Label>\r\n            )}\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              sx={{\r\n                fontSize: '32px',\r\n                color: '#00000060',\r\n                fontWeight: '900',\r\n                display: 'flex',\r\n                justifyContent: 'center'\r\n              }}\r\n            >\r\n              Add a New Visitor\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mt: 3 }}>\r\n              Take Photo\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">Upload an image to make it easily recognizable.</Typography>\r\n\r\n            <Box sx={{ my: 3 }}>\r\n              <UploadAvatar\r\n                accept=\"image/*\"\r\n                file={values.avatarUrl}\r\n                maxSize={3145728}\r\n                onDrop={handleDrop}\r\n                error={Boolean(touched.avatarUrl && errors.avatarUrl)}\r\n                caption={\r\n                  <Box sx={{ mt: 5, display: 'flex', justifyContent: 'center' }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        color: 'white',\r\n                        backgroundColor: '#916A00',\r\n                        boxShadow: '0 0px 0px #fff',\r\n                        py: '7px',\r\n                        px: '22px',\r\n                        '&:hover': {\r\n                          backgroundColor: '#916A00'\r\n                        },\r\n                        fontSize: '14px',\r\n                        fontWeight: '700'\r\n                      }}\r\n                      startIcon={<Icon icon=\"mdi:cloud-upload\" color=\"white\" width=\"20\" height=\"20\" />}\r\n                    >\r\n                      Take Image\r\n                    </Button>\r\n                  </Box>\r\n                }\r\n              />\r\n              {/* <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\r\n                {touched.avatarUrl && errors.avatarUrl}\r\n              </FormHelperText> */}\r\n            </Box>\r\n\r\n            {isEdit && (\r\n              <FormControlLabel\r\n                labelPlacement=\"start\"\r\n                control={\r\n                  <Switch\r\n                    onChange={(event) => setFieldValue('status', event.target.checked ? 'banned' : 'active')}\r\n                    checked={values.status !== 'active'}\r\n                  />\r\n                }\r\n                label={\r\n                  <>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                      Banned\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      Apply disable account\r\n                    </Typography>\r\n                  </>\r\n                }\r\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\r\n              />\r\n            )}\r\n\r\n            {/* <FormControlLabel\r\n              labelPlacement=\"start\"\r\n              control={<Switch {...getFieldProps('isVerified')} checked={values.isVerified} />}\r\n              label={\r\n                <>\r\n                  <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                    Email Verified\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                    Disabling this will automatically send the user a verification email\r\n                  </Typography>\r\n                </>\r\n              }\r\n              sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n            /> */}\r\n          </Stack>\r\n\r\n          <Stack spacing={3}>\r\n            <Stack>\r\n              <Typography variant=\"subtitle1\">2. Customer Details</Typography>\r\n              <Typography variant=\"subtitle2\" sx={{ ml: 2 }}>\r\n                Enter applicant details below.\r\n              </Typography>\r\n            </Stack>\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"First Name\"\r\n                {...getFieldProps('name')}\r\n                error={Boolean(touched.name && errors.name)}\r\n                helperText={touched.name && errors.name}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last Name\"\r\n                {...getFieldProps('name')}\r\n                error={Boolean(touched.name && errors.name)}\r\n                helperText={touched.name && errors.name}\r\n              />\r\n            </Stack>\r\n\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                {...getFieldProps('phoneNumber')}\r\n                error={Boolean(touched.phoneNumber && errors.phoneNumber)}\r\n                helperText={touched.phoneNumber && errors.phoneNumber}\r\n              />\r\n            </Stack>\r\n            <Stack>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                {...getFieldProps('email')}\r\n                error={Boolean(touched.email && errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n            </Stack>\r\n            <Stack>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Visit Purpose\"\r\n                {...getFieldProps('visitpurpose')}\r\n                error={Boolean(touched.visitpurpose && errors.visitpurpose)}\r\n                helperText={touched.visitpurpose && errors.visitpurpose}\r\n              />\r\n            </Stack>\r\n            <Stack>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Meeting Agent\"\r\n                {...getFieldProps('meetingagent')}\r\n                error={Boolean(touched.meetingagent && errors.meetingagent)}\r\n                helperText={touched.meetingagent && errors.meetingagent}\r\n              />\r\n            </Stack>\r\n\r\n            <Box sx={{ mt: 6, display: 'flex', justifyContent: 'center' }}>\r\n              <LoadingButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                loading={isSubmitting}\r\n                sx={{\r\n                  color: 'white',\r\n                  backgroundColor: '#916A00',\r\n                  boxShadow: '0 0px 0px #fff',\r\n                  py: '7px',\r\n                  px: '22px',\r\n                  mt: 3,\r\n                  '&:hover': {\r\n                    backgroundColor: '#916A00'\r\n                  },\r\n                  fontSize: '14px',\r\n                  fontWeight: '500'\r\n                }}\r\n              >\r\n                Add New Visitor\r\n              </LoadingButton>\r\n            </Box>\r\n          </Stack>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","// material\r\nimport { Container, Typography, Stack } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport { AddVisitorForm } from '../../components/_gate/general-addvisitor';\r\n\r\n// ----------------------------------------------------------------------\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  minHeight: '100vh',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\nexport default function AddVisitor() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  return (\r\n    <Page title=\"Gate | Add Visitor\">\r\n      <Container maxWidth=\"lg\">\r\n        <ContentStyle>\r\n          <AddVisitorForm />\r\n        </ContentStyle>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","// ----------------------------------------------------------------------\n\nexport default function fakeRequest(time) {\n  return new Promise((res) => setTimeout(res, time));\n}\n"],"sourceRoot":""}